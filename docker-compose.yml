version: '2.2'

services:
  database:
    image: postgis/postgis:13-master
    # Required when running on platform other than amd64, like Apple M1/M2:
    # platform: linux/amd64
    volumes:
      - ./back/database:/var/lib/postgresql/data
    networks:
      - webappnetwork
    environment:
      POSTGRES_USER: 'directus'
      POSTGRES_PASSWORD: 'directus'
      POSTGRES_DB: 'directus'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U directus']
      interval: 10s
      timeout: 5s
      retries: 5

  cache:
    image: redis:6
    networks:
      - webappnetwork
    healthcheck:
      test: ['CMD', 'redis-cli', '--raw', 'incr', 'ping']

  back:
    image: directus/directus:10.5.2
    # build:
    #   context: ./back
    #   dockerfile: ./Dockerfile
    environment:
      KEY: '256a641f-244f-4a1b-a946-b054e4fb183c'
      SECRET: '8e1fa5a6-daf2-4cfc-99a0-b9b538ac0d82'

      ADMIN_EMAIL: 'admin@directus.com'
      ADMIN_PASSWORD: '4JWI2(5MaF|'

      DB_CLIENT: 'pg'
      DB_HOST: 'database'
      DB_PORT: '5432'
      DB_DATABASE: 'directus'
      DB_USER: 'directus'
      DB_PASSWORD: 'directus'

      CACHE_ENABLED: 'false'
      CACHE_STORE: 'redis'
      REDIS: 'redis://cache:6379'

      PUBLIC_URL: ${BACK_URI}

      EXTENSIONS_AUTO_RELOAD: ${EXTENSIONS_AUTO_RELOAD}

      # BACKUP_FTP_HOST: ${BACKUP_FTP_HOST}
      # BACKUP_FTP_PORT: ${BACKUP_FTP_PORT:-21}
      # BACKUP_FTP_USER: ${BACKUP_FTP_USER}
      # BACKUP_FTP_PASS: ${BACKUP_FTP_PASS}
      # BACKUP_FTP_PATH: ${BACKUP_FTP_PATH:-/backups}
      # BACKUP_FTP_SECURE: ${BACKUP_FTP_SECURE}
      # ROLLING_BACKUPS: ${ROLLING_BACKUPS:-20}
      # BACKUP_CRON: ${BACKUP_CRON}

      CORS_ENABLED: true
      CORS_ORIGIN: 'http://localhost:3000,http://127.0.0.1:3000'
      PHASE: ${PHASE:-development}
      TZ: ${TZ}
    ports:
      - 127.0.0.1:${BACK_PORT:-3010}:8055
    networks:
      - webappnetwork
    volumes:
      - ./back/uploads:/directus/uploads
      - ./back/database:/directus/database
      - ./back/extensions:/directus/extensions
      - ./back/snapshot:/directus/snapshot
      - ./back/backups:/directus/backups
    restart: unless-stopped
    depends_on:
      cache:
        condition: service_healthy
      database:
        condition: service_healthy
    healthcheck:
      test: wget --no-verbose --tries=1 --spider back:8055/admin || exit 1
      interval: 5s
      retries: 10
      timeout: 10s
    extra_hosts:
      - 'host.docker.internal:host-gateway'

networks:
  webappnetwork:
    driver: bridge
