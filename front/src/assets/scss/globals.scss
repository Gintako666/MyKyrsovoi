@tailwind components;
@tailwind utilities;

// Connection utils
@import "base/utils";

// Connection mixins
@import "base/mixins";

// Connection variables
@import "variables";

// Reset styles
@import "base/reset";

// Connecting basic component styles
@import "base";

// Connecting shared component styles
@import "shared";

// Connecting layout styles
@import "~/components/layout/Layout";

// Connecting page styles
@import "~/components/screens/404/404";
@import "~/components/screens/Home/Home";
@import "~/components/screens/Categories/Categories";
@import "~/components/screens/Transactions/Transactions";
@import "~/components/screens/Upload/Upload";

// Connection Google fonts
// &display=swap

// Connection local fonts
// @import "fonts/fonts";

// Connection icon fonts
@import "fonts/icons";

// ============================================================================

// Settings template
// $fontFamily: "";

// ============================================================================

// Adaptive grid settings

// Adaptive type:
// 1 = responsiveness
// !1 = according to breakpoints
$adaptive-type: 1;

// Scrollbar styles
::-webkit-scrollbar {
  @apply w-3;

  background-color: $scroll-bg;

  &-thumb {
    @apply rounded-md;

    background-color: $scroll-color;
  }
}

// ============================================================================

// Body tag styles
body {
  // Lock scroll
  &.lock {
    @apply overflow-hidden touch-auto overscroll-none;
  }
}

// Shell wrapper
.wrapper {
  @apply min-w-full flex flex-col overflow-hidden;

  @supports (overflow: clip) {
    @apply overflow-clip;
  }

  // Press the footer
  > main {
    @apply flex-auto;
  }
}

// Limiting container

// Responsive
@if $adaptive-type == 1 {
  [class*="__container"] {
    @if $max-width-container > 0 {
      @apply mx-auto;

      max-width: rem($container-width);
    }

    @if $container-padding > 0 {
      // @if $max-width-container > 0 {
      // padding-left: rem(calc($container-padding / 2));
      // padding-right: rem(calc($container-padding / 2));
      // } @else {
      @include responsive-value(padding-left, calc($container-padding / 2), 15);
      @include responsive-value(
        padding-right,
        calc($container-padding / 2),
        15
      );

      // }
    }
  }
}

// According to breakpoints
@else {
  [class*="__container"] {
    @apply mx-auto;

    @if $max-width-container > 0 {
      max-width: rem($containerWidth);
    } @else {
      @if $container-padding > 0 {
        padding-left: rem(calc($container-padding / 2));
        padding-right: rem(calc($container-padding / 2));
      }
    }

    @media (max-width: $pc) {
      max-width: rem(970);
    }

    @media (max-width: $tablet) {
      max-width: rem(750);
    }

    @media (max-width: $mobile) {
      @apply max-w-none;
    }

    @if $container-padding > 0 and $maxWidthContainer > 0 {
      padding-left: rem(calc($container-padding / 2));
      padding-right: rem(calc($container-padding / 2));
    }
  }
}
